{"type": "DEC", "id": "DEC-2025-09-ssot-governance", "context": "Docs drifted from design; humans edited markdown directly.", "decision": "Make SSOT YAML the only truth. Generate PRD/ADDH from SSOT. Add gov check that fails on drift or missing DEC/REQ IDs.", "consequences": "Slight friction but deterministic docs and auditable links.", "status": "accepted", "links": {"req": ["REQ-WS-SSOT-01", "REQ-WS-GOV-01"]}}
{"type": "DEC", "id": "DEC-2025-09-prompt-manifest", "context": "Prompt-like strings lacked IDs, versions, and redaction discipline.", "decision": "Add prompt scanner and `.genticode/prompts.yaml` manifest; gate on missing id/version/redaction.", "consequences": "Early noise but strong prompt hygiene and traceability.", "status": "accepted", "links": {"req": ["REQ-WS-PROMPT-01", "REQ-WS-PROMPT-02"]}}
{"type": "DEC", "id": "DEC-2025-09-recursion-guards", "context": "Dogfooding could recurse on generated artifacts and metadata.", "decision": "Add default ignore set and install hooks to block unsafe test edits.", "consequences": "Cleaner scans, fewer false findings; local guardrails.", "status": "accepted", "links": {"req": ["REQ-WS-RECURSE-01", "REQ-WS-HOOKS-01"]}}
{"type": "DEC", "id": "DEC-2025-09-pkg-matrix-smoke", "context": "Installability and basic flows must hold across platforms.", "decision": "Package and smoke-install via pipx; run matrix on Linux/macOS.", "consequences": "Higher CI cost; fewer surprise failures for users.", "status": "accepted", "links": {"req": ["REQ-WS-PKG-01", "REQ-WS-PKG-02", "REQ-WS-MATRIX-01"]}}
{"type": "DEC", "id": "DEC-2025-09-sbom-provenance", "context": "SBOMs risked manual edits and incomplete provenance.", "decision": "Generate SBOMs from lockfiles only. Delta gate on licenses, unknowns, and new high vulns.", "consequences": "Strong supply guarantees; stricter policy failures possible.", "status": "accepted", "links": {"req": ["REQ-WS-SBOM-01", "REQ-WS-SBOM-02"]}}
{"type": "DEC", "id": "DEC-2025-09-sarif-sample", "context": "Findings visibility and end-to-end confidence were limited.", "decision": "Upload SARIF to PRs and maintain a `genticode-sample` repo for E2E.", "consequences": "Clear PR feedback; reproducible demo target.", "status": "accepted", "links": {"req": ["REQ-WS-SARIF-01", "REQ-WS-SAMPLE-01"]}}
{"type": "DEC", "id": "DEC-2025-09-perf-safe", "context": "Long-running scans and subprocess risks.", "decision": "Add performance budgets and subprocess hardening (no shell=True, path confinement).", "consequences": "Predictable runtimes and safer execution.", "status": "accepted", "links": {"req": ["REQ-WS-PERF-01", "REQ-WS-SAFE-01"]}}
{"type": "DEC", "id": "DEC-2025-09-lessons-config", "context": "Lessons ingestion may be good enough unattended in some contexts.", "decision": "Make lessons ingestion configurable: draft by default; optional auto_ready with guardrails and thresholds.", "consequences": "Faster loops when safe; human confirmation otherwise.", "status": "accepted", "links": {"req": ["REQ-WS-LESSONS-01", "REQ-WS-LESSONS-02"]}}
{"type": "DEC", "id": "DEC-2025-09-trace-enforce", "context": "Test reward hacking: nerfed or deleted tests.", "decision": "Require AC markers and waivers for test edits; link ACs to tests and gate on missing coverage for READY ACs.", "consequences": "Higher initial friction; stronger verification.", "status": "accepted", "links": {"req": ["REQ-WS-TRACE-01", "REQ-WS-TRACE-02"]}}
{"type": "DEC", "id": "DEC-2025-09-policy-audit-trail", "context": "Policy phase changes lacked auditability.", "decision": "Require a DEC entry when flipping phases (warn→delta→hard) and surface phase in reports.", "consequences": "Visible accountability for enforcement changes.", "status": "accepted", "links": {"req": ["REQ-WS-POLICY-01"]}}
{"type": "DEC", "id": "DEC-2025-09-tui-cli", "context": "Not all users have VS Code; headless flows are needed.", "decision": "Build VS Code TUI and provide CLI parity for REQ/DEC ops with identical validation.", "consequences": "Wider usability and CI scripting options.", "status": "accepted", "links": {"req": ["REQ-WS-TUI-01", "REQ-WS-TUI-CLI-01"]}}
{"type": "REQ", "id": "REQ-WS-SSOT-01", "title": "SSOT YAMLs and deterministic doc render", "status": "ready", "acceptance": [{"id": "AC-WS-SSOT-RENDER", "text": "PRD.md and ADDH.md render from SSOT and are byte-stable across runs", "coverage": "required"}, {"id": "AC-WS-SSOT-GOV", "text": "gov check fails on doc drift or missing DEC/REQ in decision-area diffs", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-GOV-01", "title": "Governance check for decision-area diffs", "status": "ready", "acceptance": [{"id": "AC-WS-GOV-DEC-REF", "text": "Decision-area diffs require DEC and REQ IDs linked in commit or PR", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-PROMPT-01", "title": "Prompt scanner and manifest", "status": "ready", "acceptance": [{"id": "AC-WS-PROMPT-MAN", "text": "`genticode prompt scan --write-manifest` writes deterministic `.genticode/prompts.yaml`", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-PROMPT-02", "title": "Prompt hygiene gating", "status": "ready", "acceptance": [{"id": "AC-WS-PROMPT-GATE", "text": "Gate on missing id/version/redaction; findings in report", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-RECURSE-01", "title": "Recursion guards and ignores", "status": "ready", "acceptance": [{"id": "AC-WS-RECURSE-IGNORE", "text": "Default ignore set enforced across packs and baseline", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-HOOKS-01", "title": "Local hooks for secrets and test edits", "status": "ready", "acceptance": [{"id": "AC-WS-HOOKS-INSTALL", "text": "`make init` installs pre-commit and pre-push hooks", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-PKG-01", "title": "Build and smoke-install package", "status": "ready", "acceptance": [{"id": "AC-WS-PKG-PIPX", "text": "`pipx install genticode` works in CI", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-PKG-02", "title": "CLI smoke on temp repo", "status": "ready", "acceptance": [{"id": "AC-WS-PKG-SMOKE", "text": "`init/check/baseline/report` succeed on a temp repo", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-MATRIX-01", "title": "CI matrix Linux/macOS", "status": "ready", "acceptance": [{"id": "AC-WS-MATRIX-GREEN", "text": "Both OSes pass smoke; Windows fails fast with guidance", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-SBOM-01", "title": "SBOM from lockfiles only", "status": "ready", "acceptance": [{"id": "AC-WS-SBOM-PROV", "text": "SBOM generated only from lockfiles; manual edits rejected", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-SBOM-02", "title": "SBOM delta gate", "status": "ready", "acceptance": [{"id": "AC-WS-SBOM-GATE", "text": "Gate on license allowlist, unknown=fail, new high vulns", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-SARIF-01", "title": "SARIF upload to PRs", "status": "ready", "acceptance": [{"id": "AC-WS-SARIF-ANN", "text": "Annotations visible on PRs in CI", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-SAMPLE-01", "title": "Sample repo E2E", "status": "ready", "acceptance": [{"id": "AC-WS-SAMPLE-E2E", "text": "`genticode-sample` E2E green and repeatable", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-PERF-01", "title": "Performance budgets and timing", "status": "ready", "acceptance": [{"id": "AC-WS-PERF-REPORT", "text": "Per-pack timings in report; gate on >2x regression", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-SAFE-01", "title": "Subprocess hardening and path confinement", "status": "ready", "acceptance": [{"id": "AC-WS-SAFE-TESTS", "text": "No shell=True; arg allowlists; repo-root confinement; large-file skip notices", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-LESSONS-01", "title": "Lessons/diff proposal drafts", "status": "ready", "acceptance": [{"id": "AC-WS-LESSONS-DRAFT", "text": "`genticode gov propose` emits drafts only by default", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-LESSONS-02", "title": "Configurable unattended mode with guardrails", "status": "ready", "acceptance": [{"id": "AC-WS-LESSONS-AUTO", "text": "Auto_ready works only when thresholds met and no test edits/deletions/budget violations", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-TRACE-01", "title": "AC markers and coverage gate", "status": "ready", "acceptance": [{"id": "AC-WS-TRACE-MARK", "text": "READY ACs linked to ≥1 test via marker; gate on missing coverage", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-TRACE-02", "title": "Test edit waiver enforcement", "status": "ready", "acceptance": [{"id": "AC-WS-TRACE-WAIVER", "text": "Test edits require waiver referencing requirement evidence", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-POLICY-01", "title": "Policy phase audit trail", "status": "ready", "acceptance": [{"id": "AC-WS-POLICY-DEC", "text": "Phase flips require DEC entry and are rendered in report", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-TUI-01", "title": "VS Code TUI for REQ/DEC", "status": "ready", "acceptance": [{"id": "AC-WS-TUI-UI", "text": "Create/edit REQ and DEC via TUI with validation and diff", "coverage": "required"}]}
{"type": "REQ", "id": "REQ-WS-TUI-CLI-01", "title": "CLI parity for REQ/DEC", "status": "ready", "acceptance": [{"id": "AC-WS-TUI-CLI", "text": "Perform same REQ/DEC ops via CLI with identical validation", "coverage": "required"}]}
{"type": "POLICY", "patch": {"progressive_enforcement": "new_code_only", "budgets": {"secrets": {"max_total": 0}, "licenses": {"deny": ["AGPL-3.0"], "fail_on_unknown": true}}, "lessons_ingestion": {"mode": "draft", "auto_ready_thresholds": {"new_classes_pct": 0.6, "max_changed_tests": 0, "max_attempts_used": 2}}, "ignore": [".genticode/**", "ssot/**", "docs/templates/**", "images/**", "dist/**", "build/**", ".venv/**", "node_modules/**"], "performance": {"total_cap_s": 1800, "regression_multiplier": 2.0}, "sbom": {"source": "lockfiles_only", "gate": {"license_allowlist": true, "unknown_fail": true, "new_high_vulns_fail": true}}, "platforms": {"linux": true, "macos": true, "windows": false}}}
{"type": "NOTE", "scope": "PRD", "text": "Water Spider beta consolidates SSOT governance, prompt hygiene, and dogfooding changes since original ADDH."}
